import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { FiHeart, FiDownload, FiShare2 } from 'react-icons/fi';
import Tilt from 'react-parallax-tilt';

// Dummy data for the gallery
const dummyImages = [
  {
    id: 1,
    url: 'https://images.unsplash.com/photo-1635070041078-e363dbe005cb?w=600&auto=format',
    prompt: 'Cyberpunk city at night with neon lights',
    author: 'AI_Artist_1',
    likes: 124,
    width: 'wide' // can be 'wide', 'tall', or 'square'
  },
  {
    id: 2,
    url: 'https://images.unsplash.com/photo-1635070040857-f72a5fbc5051?w=300&auto=format',
    prompt: 'Portrait of a steampunk woman with mechanical arm',
    author: 'DigitalDreamer',
    likes: 89,
    width: 'tall'
  },
  {
    id: 3,
    url: 'https://images.unsplash.com/photo-1635070041078-e363dbe005cb?w=600&auto=format',
    prompt: 'Fantasy landscape with floating islands',
    author: 'FantasyCreator',
    likes: 156,
    width: 'square'
  },
  {
    id: 4,
    url: 'https://images.unsplash.com/photo-1635070040857-f72a5fbc5051?w=300&auto=format',
    prompt: 'Hyperrealistic futuristic car design',
    author: 'TechDesigner',
    likes: 72,
    width: 'wide'
  },
  {
    id: 5,
    url: 'https://images.unsplash.com/photo-1635070041078-e363dbe005cb?w=600&auto=format',
    prompt: 'Surrealist melting clock landscape',
    author: 'SurrealMaster',
    likes: 201,
    width: 'tall'
  },
  {
    id: 6,
    url: 'https://images.unsplash.com/photo-1635070040857-f72a5fbc5051?w=300&auto=format',
    prompt: 'Anime-style samurai warrior',
    author: 'AnimeArtGod',
    likes: 143,
    width: 'square'
  }
];

const ImageCard = ({ image }) => {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <Tilt
      tiltEnable={false}
      glareEnable={true}
      glareMaxOpacity={0.1}
      glareColor="#ffffff"
      glarePosition="all"
      scale={1.02}
      transitionSpeed={2000}
    >
      <motion.div
        className={`relative rounded-xl overflow-hidden cursor-pointer ${
          image.width === 'wide' ? 'col-span-2' : 
          image.width === 'tall' ? 'row-span-2' : ''
        }`}
        onHoverStart={() => setIsHovered(true)}
        onHoverEnd={() => setIsHovered(false)}
        whileHover={{ scale: 1.02 }}
      >
        <img
          src={image.url}
          alt={image.prompt}
          className="w-full h-full object-cover"
        />
        
        {/* Hover Overlay */}
        <motion.div
          className="absolute inset-0 bg-gradient-to-t from-black/90 via-black/60 to-transparent p-4 flex flex-col justify-end"
          initial={{ opacity: 0 }}
          animate={{ opacity: isHovered ? 1 : 0 }}
          transition={{ duration: 0.3 }}
        >
          <motion.div
            initial={{ y: 20 }}
            animate={{ y: isHovered ? 0 : 20 }}
            transition={{ duration: 0.3 }}
          >
            <h3 className="text-white font-medium text-sm md:text-base line-clamp-2">
              {image.prompt}
            </h3>
            <p className="text-gray-300 text-xs mt-1">by {image.author}</p>
          </motion.div>
          
          <motion.div
            className="flex justify-between items-center mt-3"
            initial={{ opacity: 0 }}
            animate={{ opacity: isHovered ? 1 : 0 }}
            transition={{ delay: 0.1 }}
          >
            <div className="flex items-center space-x-2">
              <button className="text-white hover:text-purple-400 transition-colors">
                <FiHeart className="w-4 h-4" />
              </button>
              <span className="text-white text-xs">{image.likes}</span>
            </div>
            <div className="flex space-x-2">
              <button className="text-white hover:text-blue-400 transition-colors">
                <FiDownload className="w-4 h-4" />
              </button>
              <button className="text-white hover:text-green-400 transition-colors">
                <FiShare2 className="w-4 h-4" />
              </button>
            </div>
          </motion.div>
        </motion.div>
      </motion.div>
    </Tilt>
  );
};

const ExploreGallery = () => {
  return (
    <section className="py-12 px-4 sm:px-6 lg:px-8 bg-black">
      <div className="max-w-7xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="text-center mb-12"
        >
          <h2 className="text-3xl md:text-5xl font-bold mb-4 bg-gradient-to-r from-purple-400 to-blue-500 bg-clip-text text-transparent">
            Community Creations
          </h2>
          <p className="text-gray-300 max-w-2xl mx-auto">
            Explore inspiring AI art generated by our community
          </p>
        </motion.div>

        {/* Responsive Masonry Grid */}
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 auto-rows-[minmax(200px,auto)]">
          {dummyImages.map((image) => (
            <ImageCard key={image.id} image={image} />
          ))}
        </div>

        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          viewport={{ once: true }}
          transition={{ delay: 0.3 }}
          className="text-center mt-12"
        >
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            className="border border-purple-500 text-purple-400 hover:bg-purple-900/30 px-6 py-3 rounded-lg font-medium transition-colors"
          >
            Load More
          </motion.button>
        </motion.div>
      </div>
    </section>
  );
};

export default ExploreGallery;